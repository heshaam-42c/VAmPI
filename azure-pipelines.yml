# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
  - master

pool:
  vmImage: 'ubuntu-latest'

variables:
  platformUrl: 'https://demolabs.42crunch.cloud'
  platformService: 'services.demolabs.42crunch.cloud:8001'
  github_org_name: heshaam-42c
  github_repo_name: VAmPI
  github_branch_name: master
  
steps:
# - checkout: self
# - checkout: protections
- task: NodeTool@0
  displayName: Use Node 12 or higher
  inputs:
    versionSpec: '=12.0.0'

- task: UsePythonVersion@0
  inputs:
    versionSpec: '3.10' 
    addToPath: true 
    #architecture: 'x64' # Options: x86, x64 (this argument applies only on Windows agents)

# Install Docker
- task: DockerInstaller@0
  displayName: 'Install Docker'
  
- script: python -m pip install requests --upgrade pip
  displayName: 'Install tools'

- script: |
    wget https://raw.githubusercontent.com/OAI/OpenAPI-Specification/refs/heads/main/examples/v3.0/api-with-examples.yaml
    ls -la

# 42Crunch API Security Audit
- task: APIContractSecurityAudit@3
  displayName: Auditing OAS Files
  inputs:
    apiToken: '$(42C_API_TOKEN)'
    minScore: '75'
    platformUrl: '$(platformUrl)'
    logLevel: DEBUG
    defaultCollectionName: 'AzureDevOps heshaam-42c/VAmPI--master'
    ignoreFailures: 'true'
    jsonReport: 'audit-action-report-$(Build.BuildId).json'
    sarifReport: 'audit-report-$(Build.BuildId).sarif'

- task: APISecurityAuditFreemium@1
  inputs:
    enforceSQG: false
    sarifReport: '$(Build.Repository.LocalPath)/$(Build.BuildId)-auditreport.sarif'
    exportAsPDF: '$(Build.Repository.LocalPath)/$(Build.BuildId)-auditreport.pdf'

# Publish SARIF Artifact
- task: PublishBuildArtifacts@1
  displayName: 'publishAuditSarif'
  inputs:
    PathtoPublish: '$(Build.Repository.LocalPath)/$(Build.BuildId)-auditreport.sarif'
    ArtifactName: 'CodeAnalysisLogs'
    publishLocation: 'Container'

# Compress & Base64 encode the sarif file
- script: |
    sarif_file_base64=$(gzip -c $(Build.Repository.LocalPath)/$(Build.BuildId)-auditreport.sarif | base64 -w0)
    echo "##vso[task.setvariable variable=AUDIT_SARIF_FILE]$sarif_file_base64"
  displayName: 'Compress & Base64 encode sarif file'

- task: Bash@3
  displayName: 'Upload SARIF report to GitHub Advanced Security (GHAS)'
  inputs:
    targetType: 'inline'
    script: |
      echo "Uploading SARIF report to GitHub Advanced Security (GHAS)"
      echo "Request body: {\"commit_sha\":\"$(Build.SourceVersion)\",\"ref\":\"refs/heads/$(github_branch_name)\",\"sarif\":\"$(AUDIT_SARIF_FILE)\"}"
      curl -L \
      -H "Authorization: Bearer $(GITHUB_TOKEN)" \
      -H "Accept: application/vnd.github.v3+json" \
      -H "X-GitHub-Api-Version: 2022-11-28" \
      https://api.github.com/repos/$(github_org_name)/$(github_repo_name)/code-scanning/sarifs \
      -d '{"commit_sha":"$(Build.SourceVersion)","ref":"refs/heads/$(github_branch_name)","sarif":"$(AUDIT_SARIF_FILE)"}'